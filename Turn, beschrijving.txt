Beschrijving TurN

Aansluitingen hoog actief maken, alle minnen aan elkaar en aan de GND
Pin11 (PORTB3) = Puls +
Pin10 (PORTB2)= Direction +  false = naar beneden
Pin9(PORTB1) =Enabled + false = draaien
pin8 Run true als motor draait PORTB0
pin4 Lock true als brug vrij is. PORTD4

DCC modes (tonen +1)
0=single 1 poort true alleen gebruiken
1=Duo1 poort true =Stops 1 poort false= stops 2
2=Duo2 poort true=stops 2 poort false=stops 1
3=Draai15
Opmerking: Programma automatisch op DRAAISCHIJF mode zetten als draai15 wordt gekozen. 


GPIOR0
bit0 init ok false nulpunt bepaald, true nulpunt, home zoeken 
bit1 direction
bit2 request start 
bit3 flag motor aan of uit, schakeld motor vrij disabled, true is aan enabled
bit4 versnellen true, vertragen false
bit5 motor draaid true, false niet
bit6 systeem, afremmen bij verandering terwijl draaid, actief =true
bit7 divider voor encoder

GPIOR1
bit0 timer versnellen vertragen
bit1 in Loop call and reset in SLOW(), set in ISR timer 2
bit2 Bij opstarten (setup) en sw_melderadres, flag als true eerst een change in melderstatus, daarna motor()
bit3 bij POS==POS_rq; als true stoppen, als false volgende POS_rq instellen
bit4 Na noodstop in melder, brug NIET vrijgeven tot er een nieuwe stops is bereikt
bit 5 sw_read pulsserend uitvoeren, telkens een pauze nemen, dus lees puls versmallen
bit6 false switches enabled, true switches disabled, voorkomt draai request waar dat niet mag (tijdens draaien en noodstop)
bit7 flag temp ISR naar display



MEM_reg 
bit0  Positie met  false=Home  true=melders (default)
bit1 als in melders, posities bepaald=false; posities nog te bepalen=true ??????Waarschijnlijk niet in gebruik
bit2 Type encoder richting 


EEPROM
100 spotstatus
101
102 MEM_reg, let op default = 0xFF
103 DCC decoder adres, default=0xFF;
104 DCC_mode
1~20 struct stops[].set 
200> struct stops[].downpos
300>struct stops[].uppos
400>struct stops[].finepos


110 Vhome
111 Vmin
112 Vmax
113 Vstep waardes 0~3 (shows 1-4)
114 aantalStops
115 Vaccel

120 Toepassing 0=draaischijf 1=rolbrug 2=lift

stops[].reg register van struct stop
bit0 Melder volledig opgeslagen
bit1 width opgeslagen, afstand breedte van de melder
bit2 afstand tussen bovenrand, upmelder naar onderrand, downmelder volgende stop opgeslagen
